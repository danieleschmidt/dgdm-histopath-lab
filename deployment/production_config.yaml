# DGDM Histopath Lab - Production Deployment Configuration
# Generated by Terry for Terragon Labs SDLC v4.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: dgdm-production-config
  namespace: dgdm-histopath
data:
  # Core Application Settings
  app_name: "DGDM Histopath Lab"
  environment: "production"
  log_level: "INFO"
  debug: "false"
  
  # Performance Configuration
  max_concurrent_tasks: "32"
  worker_processes: "8"
  cache_size_mb: "2000"
  memory_pool_mb: "1000"
  
  # Security Settings
  encryption_enabled: "true"
  phi_detection_enabled: "true"
  rate_limiting_enabled: "true"
  audit_logging: "true"
  
  # Resilience Configuration  
  circuit_breaker_enabled: "true"
  circuit_breaker_threshold: "5"
  retry_max_attempts: "3"
  health_check_interval: "30"
  
  # Scaling Configuration
  auto_scaling_enabled: "true"
  min_replicas: "2"
  max_replicas: "20"
  target_cpu_utilization: "70"
  target_memory_utilization: "80"
  
  # Database Configuration
  database_host: "${DB_HOST}"
  database_port: "${DB_PORT}"
  database_name: "${DB_NAME}"
  database_pool_size: "20"
  database_timeout: "30"
  
  # Redis Configuration
  redis_host: "${REDIS_HOST}"
  redis_port: "${REDIS_PORT}"
  redis_password: "${REDIS_PASSWORD}"
  redis_db: "0"
  
  # Monitoring Configuration
  metrics_enabled: "true"
  metrics_port: "9090"
  health_port: "8080"
  tracing_enabled: "true"
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dgdm-histopath-api
  namespace: dgdm-histopath
  labels:
    app: dgdm-histopath
    tier: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dgdm-histopath
      tier: api
  template:
    metadata:
      labels:
        app: dgdm-histopath
        tier: api
    spec:
      containers:
      - name: dgdm-api
        image: dgdm-histopath:latest
        ports:
        - containerPort: 8000
        - containerPort: 8080  # Health check
        - containerPort: 9090  # Metrics
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: dgdm-secrets
              key: database-host
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dgdm-secrets
              key: database-password
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: dgdm-secrets
              key: redis-host
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dgdm-secrets
              key: redis-password
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: config
        configMap:
          name: dgdm-production-config
      - name: logs
        emptyDir: {}
      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dgdm-histopath-worker
  namespace: dgdm-histopath
  labels:
    app: dgdm-histopath
    tier: worker
spec:
  replicas: 5
  selector:
    matchLabels:
      app: dgdm-histopath
      tier: worker
  template:
    metadata:
      labels:
        app: dgdm-histopath
        tier: worker
    spec:
      containers:
      - name: dgdm-worker
        image: dgdm-histopath-worker:latest
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: WORKER_TYPE
          value: "quantum_processor"
        - name: MAX_CONCURRENT_TASKS
          value: "8"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: data-processing
          mountPath: /app/data
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: dgdm-model-cache
      - name: data-processing
        persistentVolumeClaim:
          claimName: dgdm-data-processing

---
apiVersion: v1
kind: Service
metadata:
  name: dgdm-histopath-api-service
  namespace: dgdm-histopath
spec:
  selector:
    app: dgdm-histopath
    tier: api
  ports:
  - name: api
    port: 80
    targetPort: 8000
  - name: health
    port: 8080
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  type: LoadBalancer

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dgdm-histopath-api-hpa
  namespace: dgdm-histopath
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dgdm-histopath-api
  minReplicas: 2
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dgdm-histopath-api-pdb
  namespace: dgdm-histopath
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dgdm-histopath
      tier: api

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dgdm-histopath-network-policy
  namespace: dgdm-histopath
spec:
  podSelector:
    matchLabels:
      app: dgdm-histopath
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: dgdm-histopath
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: dgdm-histopath
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS